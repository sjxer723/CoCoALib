#ifndef CoCoA_SparsePolyOps_IsPrimitivePoly_H
#define CoCoA_SparsePolyOps_IsPrimitivePoly_H

//   Copyright (c)  2023  John Abbott,  Anna M. Bigatti
//   Original author: Nico Mexis (2023)

//   This file is part of the source of CoCoALib, the CoCoA Library.
//
//   CoCoALib is free software: you can redistribute it and/or modify
//   it under the terms of the GNU General Public License as published by
//   the Free Software Foundation, either version 3 of the License, or
//   (at your option) any later version.
//
//   CoCoALib is distributed in the hope that it will be useful,
//   but WITHOUT ANY WARRANTY; without even the implied warranty of
//   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
//   GNU General Public License for more details.
//
//   You should have received a copy of the GNU General Public License
//   along with CoCoALib.  If not, see <http://www.gnu.org/licenses/>.


#include "CoCoA/ring.H"


namespace CoCoA
{

  bool IsPrimitivePoly(ConstRefRingElem f);
//     RingElem PowerMod(const RingElem& f, const BigInt& N, const RingElem& modulus);


} // end of namespace CoCoA


// RCS header/log in the next few lines
// $Header: /Volumes/Home_1/cocoa/cvs-repository/CoCoALib-0.99/include/CoCoA/SparsePolyOps-IsPrimitivePoly.H,v 1.1 2023/03/15 21:33:24 abbott Exp $
// $Log: SparsePolyOps-IsPrimitivePoly.H,v $
// Revision 1.1  2023/03/15 21:33:24  abbott
// Summary: New fn IsPrimitivePoly
//
//
//


#endif
